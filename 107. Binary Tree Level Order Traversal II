Time: O(n)  Space: O(n)
--> BFS

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        if(!root)
            return res;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            vector<int> ans;
            int n=q.size();
            for(int i=0;i<n;i++){
                TreeNode* curr=q.front();q.pop();
                ans.push_back(curr->val);
                if(curr->left)
                    q.push(curr->left);
                if(curr->right)
                    q.push(curr->right);
            }    
            res.push_back(ans);
        }
        reverse(begin(res),end(res));
        return res;
    }
};

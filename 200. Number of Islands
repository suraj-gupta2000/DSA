Time: O(m*n)  Space: O(m*n)
-->DFS

class Solution {
public:
    void mark(vector<vector<char>>& grid,int i,int j,int m,int n){
        grid[i][j]='x';
        if(j+1<n && grid[i][j+1]=='1'){
           mark(grid,i,j+1,m,n);
        }
        if(i+1<m && grid[i+1][j]=='1')
            mark(grid,i+1,j,m,n);
        if(j-1 >=0 && grid[i][j-1]=='1')
            mark(grid,i,j-1,m,n);
        if(i-1>=0 && grid[i-1][j]=='1')
            mark(grid,i-1,j,m,n);
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size(),n=grid[0].size();
        int res=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1'){
                    res++;
                    mark(grid,i,j,m,n);
                }
            }
        }
        return res;
    }
};

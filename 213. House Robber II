Time: O(n)  Space: O(n)

class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==1)
            return nums[0];
        vector<int> dp1(n);  // including 1st element and excluding last element 
        vector<int> dp2(n);  //excluding 1st element and including last element
        dp1[1]=nums[0];
        for(int i=2;i<n;i++){
            dp1[i]=max(dp1[i-1],dp1[i-2]+nums[i-1]);
        }
        dp2[1]=nums[1];
        for(int i=2;i<n;i++){
            dp2[i]=max(dp2[i-1],dp2[i-2]+nums[i]);
        }
                      return max(dp1[n-1],dp2[n-1]);
    }
};

Time: O(Log n * n)  Space: O(1)

class Solution {
public:
    int minMaxGame(vector<int>& nums) {
        int n=size(nums);
        if(n==1)
                return nums[0];
        bool flag=true;
        for(int i=0,j=0;i<n;i=i+2,j++){
            if(flag){
                nums[j]=min(nums[i],nums[i+1]);
            }else{
                nums[j]=max(nums[i],nums[i+1]);
            }
            //cout<<n<<" "<<flag<<" "<<nums[j]<<"::";
            flag=!flag;
            if(i+2==n){
                i=-2,j=-1;
                n= n>>1;
            }
            if(n==1)
                return nums[0];
        }
        return nums[0];
    }
};

Time: O(2*n-1)  Space: O(n)  ---> 1+2+4+..+n=2*n-1

class Solution {
public:
    int minMaxGame(vector<int>& nums) {
        int n=size(nums);
        if(n==1)
                return nums[0];
       vector<int> num(n/2);
        for(int i=0;i<n/2;i++){
            if(i&1)
                num[i]=max(nums[2*i],nums[2*i+1]);
            else
                num[i]=min(nums[2*i],nums[2*i+1]);
        }
        return minMaxGame(num);
    }
};

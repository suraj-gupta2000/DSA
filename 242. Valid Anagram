Time: O(n*Log n) Space: O(n)

class Solution {
public:
    bool isAnagram(string s, string t) {
        sort(begin(s),end(s));
        sort(begin(t),end(t));
        return s==t;
    }
};


Time: O(n) Space: O(2*26)

class Solution {
public:
    bool isAnagram(string s, string t) {
        int n=s.size(),m=t.size();
        if(n!=m)
            return false;
        vector<int> v1(26),v2(26);
        for(int i=0;i<n;i++)
         v1[s[i]-'a']++,v2[t[i]-'a']++ ;
        if(v1==v2)
            return true;
        return false;
    }
};

Time: O(n) Space: O(26)

class Solution {
public:
    bool isAnagram(string s, string t) {
        int n=s.size(),m=t.size();
        if(n!=m)
            return false;
        vector<int> v(26);
        for(int i=0;i<n;i++)
        { v[s[i]-'a']++;v[t[i]-'a']-- ;}
        
        for(int i=0;i<26;i++){
            if(v[i]!=0)
              return false;
        }
        return true;
    }
};

Time : O(n*n)
Space : O(n*n)

class Solution {
public:
    int m,n;
    int fun(int r,int c,vector<vector<int>> &b){
        int res=0;
        if( c+1<n and b[r][c+1]==1)
            res++;
        if(r+1<m and b[r+1][c]==1)
            res++;
        if(c-1>=0 and b[r][c-1]==1)
            res++;
        if(r-1>=0 and b[r-1][c]==1)
            res++;
        if(r-1>=0 and c-1>=0 and b[r-1][c-1]==1)
            res++;
        if(r-1>=0 and c+1<n and b[r-1][c+1]==1)
            res++;
        if(r+1<m and c+1<n and b[r+1][c+1]==1)
            res++;
        if(r+1<m and c-1>=0 and b[r+1][c-1]==1)
            res++;
        return res;
    }
    
    void gameOfLife(vector<vector<int>>& board) {
         m=board.size();
         n=board[0].size();
        vector<vector<int>> res(m,vector<int> (n));
        for(int r=0;r<m;r++){
            for(int c=0;c<n;c++){
              int l=  fun(r,c, board);
                //cout<<l<<"...";
                if(board[r][c]==1){
                    if(l<2 or l>3)
                        res[r][c]=0;
                    else
                        res[r][c]=1;
                }else{
                    if(l==3)
                        res[r][c]=1;
                    else
                        res[r][c]=0;
                }
                
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                board[i][j]=res[i][j];
            }
        }
    }
};


Time: O(r*c)  Space: O(1)

class NumMatrix {
public:
    vector<vector<int>> mat;
    NumMatrix(vector<vector<int>>& matrix) {
       mat =matrix;
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int res=0;
        for(int i=row1;i<=row2;i++){
            for(int j=col1;j<=col2;j++){
                res+=mat[i][j];
            }
        }
        return res;
    }
};

Time: O(m) per query, O(mn) precomputation  Space: O(mn)

class NumMatrix {
public:
    vector<vector<int>> dp;
    NumMatrix(vector<vector<int>>& matrix) {
       if(matrix.size()==0 or matrix[0].size()==0)
           return;
        vector<vector<int>> mat(matrix.size(),vector<int> (matrix[0].size()+1));
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[0].size();j++){
                mat[i][j+1]=mat[i][j]+matrix[i][j];
            }
        }
        dp=mat;
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int res=0;
        for(int i=row1;i<=row2;i++){
            res+=dp[i][col2+1]-dp[i][col1];
        }
        return res;
    }
};

Time: O(n^2)  Space: O(1)

class Solution {
public:
    int firstUniqChar(string s) {
        for(int i=0;i<size(s);i++){
            if(s.find(s[i],i+1)==string::npos and s.find(s[i])==i)
                return i;
        }
        return -1;
    }
};

Time: O(n)  Space: O(n)
--> Two Traversal

class Solution {
public:
    int firstUniqChar(string s) {
        map<char,int> m;
        int n=size(s);
        for(int i=0;i<n;i++)
            m[s[i]]++;
        for(int i=0;i<n;i++){
            if(m[s[i]]==1)
                return i;
        }
        return -1;
    }
};

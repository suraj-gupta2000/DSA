Time: O(n*Logn) Space: O(1)

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        int n=nums.size();
        sort(begin(nums),end(nums));
        int k=0;
        for(int i=n-1;i>=0;i--){
            if(i>0 and nums[i]==nums[i-1]){continue;}
            k++;
            if(k==3)
                return nums[i];
        }
        return nums[n-1];
    }
};

Time: O(n) Space: O(n) Using set

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        set<int> s;
        for(int x:nums)
            s.insert(x);
        int n=s.size();
        auto i=s.end();
        i--;
        if(n<3)
            return *i;
        i--;i--;
        
        return *i;
        
    }
};
Time: O(n) Space: O(1)

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        long f,s,t;
        f=s=t=LONG_MIN;
        for(int x:nums)
            if(x>f)
                f=x;
        for(int x:nums)
            if(x<f and x>s)
                s=x;
        for(int x:nums)
            if(x<s and x>t)
                t=x;
        return (s==LONG_MIN or t==LONG_MIN) ? f : t ;
    }
};

Time: O(n)

public:
  bool dfs(int src,int parent,vector<int> adj[],vector<bool> &visited){
      visited[src]=true;
      for(auto v:adj[src]){
          if(visited[v]==false){
              if(dfs(v,src,adj,visited)==true)
              return true;
          }
          else if(v!=parent)
              return true;
      }
      return false;
  }
  
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<bool> visited(V,false);
        for(int i=0;i<V;i++){
            if(visited[i]==false){
                if(dfs(i,-1,adj,visited)==true)
                return true;
            }
        }
        return false;
    }

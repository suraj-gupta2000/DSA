--> Time: O(n*n)  gives TLE

vector<int> print_next_greater_freq(int arr[],int n)
    {
        vector<int> res(n,-1);
        map<int,int> mp;
        for(int i=0;i<n;i++){
            mp[arr[i]]++;
        }
        for(int i=0;i<n;i++){
            int x=mp[arr[i]];
            for(int j=i+1;j<n;j++){
                if(mp[arr[j]]>x){
                    res[i]=arr[j];
                    break;
                }
            }
        }
        return res;
        
        
--> Time: O(n)

vector<int> print_next_greater_freq(int arr[],int n)
    {
        vector<int> res(n,-1);
        stack<int> s;
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++){
            mp[arr[i]]++;
        }
        s.push(0);
        for(int i=1;i<n;i++){
            if(mp[arr[s.top()]] > mp[arr[i]]){
                s.push(i);
            }else{
                while(!s.empty() and mp[arr[s.top()]] < mp[arr[i]]){
                    res[s.top()]=arr[i];
                    s.pop();
                }
                s.push(i);
            }
        }
        return res;
    }
